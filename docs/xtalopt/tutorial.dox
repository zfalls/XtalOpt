namespace XtalOpt {
/**

@page tut-xo XtalOpt Tutorial

@section Contents
  - \ref launch
  - \ref init
  - \ref opt
    - \ref vasp-opt
    - \ref gulp-opt
    - \ref pwscf-opt
    - \ref castep-opt
    - \ref siesta-opt
  - \ref qisetup
    - \ref remotepbs
    - \ref remotesge
    - \ref remoteslurm
    - \ref remotelsf
    - \ref remotell
    - \ref localqi
  - \ref files
  - \ref search-set
  - \ref begin
  - \ref prog-mon
    - \ref trends
  - \ref xo_tut_further
    - \ref optschemes
    - \ref xo_saveresume

@section launch Launch XtalOpt
Open avogadro, go to the "Extensions" menu and select
"XtalOpt".

@section init Enter composition and restraints
@image html struct-lim.png
@image latex struct-lim.png width=\textwidth

The interface opens to the "Structure Limits" tab, shown above. We
will use a 6 formula unit supercell of titanium dioxide for this
tutorial, so enter "Ti6 O12" for the cell composition. We will assume
that we know nothing about the system and use very loose
restraints. Set all cell length minima to 1 angstrom and maxima to 20
angstrom. Constrain the angles to be between 60 and 120 degrees, and
the volume from between 1 and 500 cubic angstrom. Specify a minimum
interatomic distance of 0.5 angstrom. (Note that due to the angle
adjustment described in the CPC 2010 publication, 60-120 degrees is
the largest range of cell angles that XtalOpt will generate.)

@section opt Optimizer setup

XtalOpt currently supports the \ref vasp-opt, \ref gulp-opt, \ref
pwscf-opt, and \ref castep-opt codes for performing geometry
optimizations. Each is detailed in its own section below.

@subsection vasp-opt VASP
\image html opt-set-vasp.png
\image latex opt-set-vasp.png width=\textwidth

On the next tab, load the optimization scheme by clicking the "Load
Opt Scheme" button and selecting the "samples/vasp-xtalopt.scheme"
file that is distributed with the source code. If you do not have a
copy of the source code, the scheme file can be obtained by clicking
the "Original Format" link at the bottom of the page <a
href="http://xtalopt.github.io/samples/vasp-xtalopt.scheme">
here</a>.

For more details on optimization schemes, see \ref optschemes.

After loading the optimization scheme, XtalOpt will prompt for the
POTCAR files to use. Select files appropriated for the prompted atom.
XtalOpt will construct the POTCAR files on the local computer, and
then copy them over to the cluster when the calculation is
submitted. It is necessary to have the VASP POTCAR files for each
atomic species located somewhere on the local computer. See the VASP
manual for information on obtaining the POTCAR files.

Take a moment to look through each file for each optimization
step. Notice that the INCAR template includes two user-specified
values, %%user2% and %%user3% for the external pressure and the energy
cutoff, respectively. By entering appropriate values in the "user2:"
and "user3:" fields on the left, it is easy to update these values for
all optimization steps.

Notice the other %%keyword% values in the job.pbs templates. These are
used to enter information that is specific to a search or structure
when the actual input files are written prior to job submission. Click
the "Help" button for a full listing of the available keywords.

XtalOpt expects VASP to use the default filenames, mainly POSCAR,
CONTCAR, and OUTCAR.

\ref qisetup "Skip to next section."

@subsection gulp-opt GULP
\image html opt-set-gulp.png
\image latex opt-set-gulp.png width=\textwidth

On the next tab we choose GULP for the local optimizer and enter a template
for GULP to use. Select "GULP" as the "Optimizer" and
"xtal.gin" as "Template". Next, fill out the text field on the
right with the following template:
\code
opti conj conp
switch_minimiser bfgs gnorm 0.5
cell
  %a% %b% %c% %alphaDeg% %betaDeg% %gammaDeg%
frac
%coordsFrac%
species
Ti 2.196
O -1.098
buck
Ti Ti 31120.1 0.1540 5.25  15
O  O  11782.7 0.2340 30.22 15
Ti O  16957.5 0.1940 12.59 15
lennard 12 6
Ti Ti 1 0 15
O  O  1 0 15
Ti O  1 0 15
\endcode

Alternatively, one can load the scheme file distributed with the
source code under samples/gulp-TiO-xtalopt.scheme. If the source code
is not available, the scheme file can be obtained by clicking the
"Original Format" link at the bottom of the page <a
href="http://xtalopt.github.io/samples/gulp-TiO-xtalopt.scheme">
here</a>.

For more details on optimization schemes, see \ref optschemes.

Note the "%" surrounding various keywords. These will be replaced by
the structure-specific data when the optimizer is invoked for each
structure. Click "Help" to view all of the keywords available. The
number of optimization steps can be modified with the "Add/Resume"
buttons. The "user" fields in the lower left corner allow users to
specify their own keyword/value pairs, which is useful for making
changes to multiple optimization steps at once. We will only be using
one optimization step in this tutorial.

XtalOpt expects GULP to use the following filenames:

\code
gulp < xtal.gin > xtal.got
\endcode

\ref qisetup "Skip to next section."

@subsection pwscf-opt PWscf
\image html opt-set-pwscf.png
\image latex opt-set-pwscf.png width=\textwidth

On the next tab, load the optimization scheme that is distributed with
the source code under the samples/ directory. The scheme that we want
is named "pwscf-xtalopt.scheme". If the source code is not available,
the scheme file can be obtained by clicking the "Original Format" link
at the bottom of the page <a
href="http://xtalopt.github.io/samples/pwscf-xtalopt.scheme">
here</a>.

For more details on optimization schemes, see \ref optschemes.

Each PWscf input file will need to be edited to specify:
 -# The pseudo_dir containing the pseudopotential files on the remote cluster, and
 -# The pseudopotentials for each atom (under ATOMIC_SPECIES)

Take a moment to look through each file for each optimization step.

Notice the %%keyword% values in the job.pbs templates. These are used
to enter information that is specific to a search or structure when
the actual input files are written prior to job submission. Click the
"Help" button for a full listing of the available keywords.

Be aware that every PWscf/CASTEP installation is different, and it is
almost certain that the job.pbs file included with this scheme will
not work on any cluster other than the Zurek group's "parity" cluster
at SUNY Buffalo's Center for Computational Resources. It may take some
experimentation to get jobs to submit successfully, and you may need
to contact the mantainers of the cluster for assistance for
information about MPI, executable locations, etc. Perhaps the easiest
method to find the correct PBS script is to run some trial submissions
by hand, and then replace the structure/search specific information
with the appropriate keywords once a working script has been
generated.

XtalOpt expects PWscf to use the following filenames:

\code
pw.x < xtal.in > xtal.out
\endcode

\ref qisetup "Skip to next section."

@subsection castep-opt CASTEP
\image html opt-set-castep.png
\image latex opt-set-castep.png width=\textwidth

On the next tab, load the optimization scheme that is distributed with
the source code under the samples/ directory. The scheme that we want
is named "castep-xtalopt.scheme". If the source code is not available,
the scheme file can be obtained by clicking <a
href="http://xtalopt.github.io/samples/castep-xtalopt.scheme">
here</a>.

For more details on optimization schemes, see \ref optschemes.

It is important to note that CASTEP input files require the "%"
character to define blocks. The percent character is special in the
XtalOpt input template parser to define keywords (see below). To
insert a literal "%" into the input, use %percent%.

E.g. Specification of the fractional coordinate block in the .cell
template should look like:

@code
%percent%BLOCK POSITIONS_FRAC
%coordsFrac%
%percent%ENDBLOCK POSITIONS_FRAC
@endcode

Take a moment to look through each file for each optimization step.

Notice the %%keyword% values in the job.pbs templates. These are used
to enter information that is specific to a search or structure when
the actual input files are written prior to job submission. Click the
"Help" button for a full listing of the available keywords.

Be aware that every PWscf/CASTEP installation is different, and it is
almost certain that the job.pbs file included with this scheme will
not work on any cluster other than the Zurek group's "parity" cluster
at SUNY Buffalo's Center for Computational Resources. It may take some
experimentation to get jobs to submit successfully, and you may need
to contact the mantainers of the cluster for assistance for
information about MPI, executable locations, etc. Perhaps the easiest
method to find the correct PBS script is to run some trial submissions
by hand, and then replace the structure/search specific information
with the appropriate keywords once a working script has been
generated.

XtalOpt expects CASTEP to use the following filenames:

\code
# XtalOpt will write xtal.cell, xtal.param
castep xtal
# CASTEP will create xtal.castep
\endcode

For more details on optimization schemes, see \ref optschemes.

@subsection siesta-opt SIESTA
\image html opt-set-siesta.png
\image latex opt-set-siesta.png width=\textwidth

On the next tab we choose SIESTA for the local optimizer and enter a template
for SIESTA to use. Select "SIESTA" as the "Optimizer" and
"xtal.fdf" as "Template". Next, fill out the text field on the
right with the following template:
\code
SystemName  %description%
SystemLabel %description%-%gen%x%id%

NumberOfAtoms   %numAtoms%
NumberOfSpecies %numSpecies%

%block% ChemicalSpeciesLabel
%chemicalSpeciesLabel%
%endblock% ChemicalSpeciesLabel

LatticeConstant 4.05 Ang

%block% LatticeVectors
%cellMatrixAngstrom%
%endblock% LatticeVectors

PAO.BasisType   split
%block% PAO.Basis
Ti  0   1.91
%endblock% PAO.Basis

AtomicCoordinatesFormat Fracitonal
%block% AtomicCoordinatesAndAtomicSpecies
%atomicCoordsAndAtomicSpecies%
%endblock% AtomicCoordinatesAndAtomicSpecies

KGridCutoff 1.0 Ang

XC.functional   GGA
XC.Authors      PBE
MD.VariableCell true

DM.Require.Energy.Convergence   true
\endcode

Alternatively, one can load the scheme file distributed with the
source code under samples/siesta-TiO-xtalopt.scheme. If the source code
is not available, the scheme file can be obtained by clicking the
"Original Format" link at the bottom of the page <a
href="http://xtalopt.github.io/samples/siesta-TiO-xtalopt.scheme">
here</a>.

Furthermore, one needs to select pseudopotential(s) for the search. 
These .psf files can be chosen by selecting "xtal.psf" in "Template". 
This will allow the user to find and choose the proper pseudopotentials for the system. 
In this example, choose the O.psf and Ti.psf from the samples directory.

For more details on optimization schemes, see \ref optschemes.

Note the "%" surrounding various keywords. These will be replaced by
the structure-specific data when the optimizer is invoked for each
structure. Click "Help" to view all of the keywords available. The
number of optimization steps can be modified with the "Add/Resume"
buttons. The "user" fields in the lower left corner allow users to
specify their own keyword/value pairs, which is useful for making
changes to multiple optimization steps at once. We will only be using
one optimization step in this tutorial.

XtalOpt expects SIESTA to use the following filenames:

\code
siesta xtal.fdf
\endcode

\ref qisetup "Skip to next section."


@section qisetup Queue setup

XtalOpt currently supports using the \ref remotepbs "PBS", \ref
remotesge "SGE", and \ref remoteslurm "SLURM" queuing systems on
remote SSH-accessible clusters, as well as an internal \ref localqi
"local" queue that manages calculations on the user's
workstation. Each queueing interface is detailed in its own section
below.

@subsection remotepbs Using a remote PBS cluster
\image html opt-set-pbs.png
\image latex opt-set-pbs.png width=\textwidth

Select "PBS" from the list of Queues, and then click the "Configure..."
button. A new window will prompt for:
  - host: The hostname of the PBS cluster's head node
  - user: The username used to log into the cluster
  - Working directory (Server): A directory that is readable/writable
      by "user" on the cluster, used when performing optimizations.
  - Working directory (Local): A directory that is readable/writable
      by the current user on the local computer. This is where the
      final structures and resume files are written.
  - Description: Used for the %%description% keyword in input templates.
  - Path to qsub: Where to find the qsub executable on the remote
      cluster. Note that if qsub is in the cluster's $PATH, setting
      this to just 'qsub' will work.
  - Path to qdel: Where to find the qdel executable on the remote
      cluster. Note that if qdel is in the cluster's $PATH, setting
      this to just 'qdel' will work.
  - Path to qstat: Where to find the qstat executable on the remote
      cluster. Note that if qstat is in the cluster's $PATH, setting
      this to just 'qstat' will work.

A new template, "job.pbs" is added to the list of available
templates. This is the job submission script for PBS. This script
should roughly follow this design:

@code
#/bin/bash
#PBS -l nodes=1:ppn=8
#PBS -o ../%gen%x%id%-%optstep%.out
#PBS -e ../%gen%x%id%-%optstep%.err
#PBS -N %description%-%gen%x%id%-%optstep%

###Include this for XtalOpt scripts!###
export PBS_O_WORKDIR=%rempath%

# Change to structure's working directory, copy input files to node's scratch dirs:
for node in `cat $PBS_NODEFILE | sort | uniq`; do
rsh $node "cp $PBS_O_WORKDIR/* $PBSTMPDIR/;";
done

# Move to the scratch directory
cd $PBSTMPDIR
echo "running in directory $PBSTMPDIR"

# Set any environment variables needed for the optimizer/MPI here:

# Run optimizer, be sure to use the filenames that XtalOpt expects.
# See the template menu in XtalOpt and the example templates in the
# samples/ directory of the XtalOpt sources.

# Don't forget to clean up after MPI if needed!

// Print files from each node
for node in `cat $PBS_NODEFILE | sort | uniq`; do
echo "$node:"
rsh $node "ls -l $PBSTMPDIR"
done
# Copy back results from master node's scratch directory
cp $PBSTMPDIR/* $PBS_O_WORKDIR/
@endcode

For more details on optimization schemes, see \ref optschemes.

Be aware that every installation is different, and it is almost
certain that the job.pbs file included with this scheme will not work
on any cluster other than the Zurek group's "parity" cluster at SUNY
Buffalo's Center for Computational Resources. It may take some
experimentation to get jobs to submit successfully, and you may need
to contact the mantainers of the cluster for assistance or information
about MPI, executable locations, etc. Perhaps the easiest method to
find the correct PBS script is to run some trial submissions by hand,
and then replace the structure/search specific information with the
appropriate keywords once a working script has been generated.

A handy trick for monitoring jobs outside of XtalOpt is to include the
following line in job.pbs:

@code
#PBS -N %description%-%gen%x%id%-%optstep%
@endcode

This will name each job, for example, xtalSearch-3x4-2, where
xtalSearch is a user-specified description of the search, and 3x4-2
means that it is the fourth structure in the third generation running
its second optimization step.

\ref files "Skip to next section."

@subsection remotesge Using a remote SGE cluster
\image html opt-set-pbs.png
\image latex opt-set-pbs.png width=\textwidth
@todo Get screenshots of SGE config dialog

Select "SGE" from the list of Queues, and then click the "Configure..."
button. A new window will prompt for:
  - host: The hostname of the SGE cluster's head node
  - user: The username used to log into the cluster
  - Working directory (Server): A directory that is readable/writable
      by "user" on the cluster, used when performing optimizations.
  - Working directory (Local): A directory that is readable/writable
      by the current user on the local computer. This is where the
      final structures and resume files are written.
  - Description: Used for the %%description% keyword in input templates.
  - Path to qsub: Where to find the qsub executable on the remote
      cluster. Note that if qsub is in the cluster's $PATH, setting
      this to just 'qsub' will work.
  - Path to qdel: Where to find the qdel executable on the remote
      cluster. Note that if qdel is in the cluster's $PATH, setting
      this to just 'qdel' will work.
  - Path to qstat: Where to find the qstat executable on the remote
      cluster. Note that if qstat is in the cluster's $PATH, setting
      this to just 'qstat' will work.

@todo Get template for job.sge scripts

A new template, "job.sge" is added to the list of available
templates. This is the job submission script for SGE. It may take some
experimentation to get jobs to submit successfully, and you may need
to contact the mantainers of the cluster for assistance or information
about MPI, executable locations, etc. Perhaps the easiest method to
find the correct SGE script is to run some trial submissions by hand,
and then replace the structure/search specific information with the
appropriate keywords once a working script has been generated.

For more details on optimization schemes, see \ref optschemes.

\ref files "Skip to next section."

@subsection remoteslurm Using a remote SLURM cluster
\image html opt-set-slurm.png
\image latex opt-set-slurm.png width=\textwidth

Select "SLURM" from the list of Queues, and then click the "Configure..."
button. A new window will prompt for:
  - host: The hostname of the SGE cluster's head node
  - user: The username used to log into the cluster
  - Working directory (Server): A directory that is readable/writable
      by "user" on the cluster, used when performing optimizations.
  - Working directory (Local): A directory that is readable/writable
      by the current user on the local computer. This is where the
      final structures and resume files are written.
  - Description: Used for the %%description% keyword in input templates.
  - Path to sbatch: Where to find the sbatch executable on the remote
      cluster. Note that if sbatch is in the cluster's $PATH, setting
      this to just 'sbatch' will work.
  - Path to scancel: Where to find the scancel executable on the remote
      cluster. Note that if scancel is in the cluster's $PATH, setting
      this to just 'scancel' will work.
  - Path to squeue: Where to find the squeue executable on the remote
      cluster. Note that if squeue is in the cluster's $PATH, setting
      this to just 'squeue' will work.

@todo Get template for job.slurm scripts

A new template, "job.slurm" is added to the list of available
templates. This is the job submission script for SLURM. It may take
some experimentation to get jobs to submit successfully, and you may
need to contact the mantainers of the cluster for assistance or
information about MPI, executable locations, etc. Perhaps the easiest
method to find the correct SLURM script is to run some trial
submissions by hand, and then replace the structure/search specific
information with the appropriate keywords once a working script has
been generated.

For more details on optimization schemes, see \ref optschemes.

\ref files "Skip to next section."

@subsection localqi Running optimations locally
\image html opt-set-local.png
\image latex opt-set-local.png width=\textwidth

Select "Local" from the list of Queues, and then click the configure
button. A new window will prompt for:
   - Local working directory: A directory that is readable/writable by
       the current user on the local computer. This is where the final
       structures and resume files are written.

If the optimizer's executable (vasp, gulp, pw.x, castep, etc) is not
in your system path, you will need to specify the location of the
executable by clicking the "Configure..."  button next to the
optimizer selection menu.

For more details on optimization schemes, see \ref optschemes.

\section files What is written to the local directory?
A directory for each structure is created at

\code
[Local working directory]/<gen#>x<id#>
\endcode

that will contain input, output, and data files specific to each
structure. Two additional files are also written to the local
filesystem:

\code
[Local working directory]/xtalopt.state
\endcode

which contains save/resume information to continue a session that has
been stopped, and

\code
[Local working directory]/results.txt
\endcode

which stores a list of all structures sorted by increasing
enthalpy. The latter file is handy for offline analysis, since there
is no need to open XtalOpt to find the most stable structures of a
previous search.

\section search-set Search Settings
\image html search-set.png
\image latex search-set.png width=\textwidth

In the "Search Settings" tab, most of the default settings should
suffice (See CPC 2010 publication). We arbitrarily set the initial
structures to 20 and the continuous structures to 5, although these
may need to be adjusted based on available resources. We will not
specify initial seeds, but the option to do so exists on this screen.

 It is not neccessary to limit the number of running jobs unless
running locally, as the PBS queue on the cluster will manage job
control for us. If running locally, set the job limit no higher than
[number of available processor cores] - 1 (e.g. for a quadcore
processor, allow three jobs to run simultaneously). This allows one
core to remain free for the system to run.

\section begin "Begin"
\image html prog-start.png "The ``Progress'' tab immediately after starting a search"
\image latex prog-start.png "The ``Progress'' tab immediately after starting a search" width=\textwidth

XtalOpt has everything it needs to start its search at this point;
click the "Begin" button in the lower right corner of the application
to tell it to start the search algorithm. A progress bar appears as
the random first generation is created. Switch to the "Progress" tab
and 20 entries will appear, all with a status of "Waiting for
Optimization". Click "Refresh" on this tab to begin the local
optimizations. From here, XtalOpt will continue to run without user
input, starting new optimizations and generating new structures until
it is stopped by the user.

\section prog-mon Monitor progress
\image html prog-mon.png "The ``Progress'' tab mid-run"
\image latex prog-mon.png "The ``Progress'' tab mid-run" width=\textwidth

As XtalOpt performs the search, the progress table continuously
updates, providing information about each structure. We see
individuals in various stages of completion: most are optimized (in
yellow), structure 2x7 has been automatically marked as a duplicate
(dark green) of structure 3x3 and removed from the breeding pool,
structure 4x4 is currently undergoing a local optimization (light
green), while structure 4x5 is waiting to be optimized (blue).

Other useful information is displayed about each structure, such as
the time spent in optimization, the optimized enthalpy, the cell
volume, spacegroup, and each structure's ancestory (i.e. parent(s) and
parameters for the genetic operator that generated it). A status bar
on the bottom of the window shows the number of structures that are
optimized, running, and failing at any given time. This information is
visible regardless of which tab is currently being viewed.

An additional feature of the progress table is the ability to
immediately visualize any of the individuals in the Avogadro main
window -- simply clicking on a row in this table will display the
three-dimensional structure in Avogadro, where it can be visualized,
modified, or exported. If the user would like to add a bit of
"intelligent design" to the evolutionary process, a structure can be
modified and then resubmitted using a context (right-click) menu from
the progress table. The context menu provides tools to (un)kill a
structure, resubmit for local optimization at an arbitrary
optimization step, or replace a problematic structure with a new,
random individual.

\subsection trends View trends
\image html trend-view.png "The ``Plot'' tab mid-run displaying enthalpy vs. volume. Each structure is labeled with its Hermann Mauguin spacegroup symbol."
\image latex trend-view.png "The ``Plot'' tab mid-run displaying enthalpy vs. volume. Each structure is labeled with its Hermann Mauguin spacegroup symbol." width=\textwidth

Another visualization and analysis tool available during the search is
the interactive plot. The plot is capable of investigating trends in
the search by plotting a point for each individual using structure
number, generation number, enthalpy, energy, $PV$ enthalpy term,
lattice parameters, or cell volume on either axis. This powerful
feature allows the user to visualize complex relationships present in
the generated structures. E.g., a plot of enthalpy vs. structure
number provides an overview of the search's progress. Or, recalling
that H = U + PV, plotting enthalpy vs. PV enthalpy term or energy
lends insight into whether the enthalpy (H) is dominated by atomic
interactions (U) or cell parameters (PV). Further information is
available by labeling the points with the individual's spacegroup
number, Hermann Mauguin spacegroup symbol, enthalpy, energy, PV
term, volume, generation, or index number.

A particularly useful plot is that of enthalpy vs. cell volume, as
shown above. From this view, we see a general trend that enthalpy
increases with volume (the effect is much more pronounced for systems
at higher pressures), and also that below a certain volume enthalpy
rises sharply. From this data set, we see that there is a cluster of
very low enthalpy structures with cell volumes around 180 cubic
angstroms. Armed with this data, we can update the starting volume on
the Cell Initialization tab mid-run to reflect this new piece of
information that the search has provided us. Many of the other
parameters governing structure generation and algorithm specifics can
be similarly modified during a search without the need to restart the
algorithm.

The plot is also interactive; zooming and panning are possible using
simple mouse controls. Clicking on a structure's point on the plot
will load it in the main Avogadro window, allow all the same
functionality as described above in \ref prog-mon.

@section xo_tut_further Further reading

From here, you may be interested in:
  - \ref optschemes
  - \ref xo_saveresume

*/

}
